!function(){"use strict";class e{constructor(e,t){let{data:s,userId:i,handleImageClick:r,handleDeleteClick:o}=e;this._name=s.name,this._link=s.link,this._cardSelector=t,this._handleImageClick=r,this._handleDeleteButton=o,this._id=s._id,this._userId=i}getId(){return this._id}isLiked(){return this._likes.some((e=>e._id===this._userId))}setLikes(e){this._likes=e,this.renderLikes()}renderLikes(){this._likesAmount=this._cardElement.querySelector(".card__like-amount"),this._likesAmount.textContent=this._likes.length,this.isLiked()?this._cardElement.querySelector(".card__like-button").classList.add("card__like-button_clicked"):this._cardElement.querySelector(".card__like-button").classList.remove("card__like-button_clicked")}_setEventListeners(){this._cardElement.querySelector(".card__like-button").addEventListener("click",(()=>{this._handleLikeIcon()})),this._cardElement.querySelector(".card__delete-button").addEventListener("click",(()=>{this._handleDeleteButton(this)})),this._cardElement.querySelector(".card__image").addEventListener("click",(()=>{this._handleImageClick({link:this._link,text:this._text})}))}_handleLikeIcon(){this._cardElement.querySelector(".card__like-button").classList.toggle("card__like-button_clicked")}_handleImageClick(){modalPicture.src=this._link,modalPicture.alt=`Photo of ${this._name}`,modalPictureDescription.textContent=this._name,open(pictureModal)}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getView(){return this._cardElement=this._getTemplate(),this._setEventListeners(),this._cardElement.querySelector(".card__image").src=this._link,this._cardElement.querySelector(".card__image").alt=this._name,this._cardElement.querySelector(".card__title").textContent=this._name,this._cardElement}remove(){this._cardElement.remove(),this._cardElement=null}}class t{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._closeButton=this._popupElement.querySelector(".modal__close-button")}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscapeClose),this._closeButton.addEventListener("click",this._handleClickClose),this._popupElement.addEventListener("mousedown",this._handleClickClose)}close(){document.removeEventListener("keydown",this._handleEscapeClose),this._popupElement.removeEventListener("mousedown",this._handleClickClose),this._popupElement.classList.remove("modal_opened"),this._closeButton.removeEventListener("click",this._handleClickClose)}_handleClickClose=e=>{(e.target.classList.contains("modal_opened")||e.target.classList.contains("modal__close-button"))&&this.close()};_handleEscapeClose=e=>{"Escape"===e.key&&this.close()}}class s extends t{constructor(e){let{popupSelector:t,handleFormSubmit:s}=e;super({popupSelector:t}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._inputList=this._popupElement.querySelectorAll(".modal__input"),this._handleFormSubmit=s,this._handleSubmit=this._handleSubmit.bind(this)}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setInputValues(e){this._inputList.forEach((t=>{t.value=e[t.name]}))}_handleSubmit(){this._handleFormSubmit(this._getInputValues())}open(){this._popupForm.addEventListener("submit",this._handleSubmit),super.open()}close(){this._popupForm.removeEventListener("submit",this._handleSubmit),this._popupForm.reset(),super.close()}}const i={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"};var r=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_showInputError(e){const t=this._form.querySelector("#"+e.id+"-error");e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector("#"+e.id+"-error");e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}toggleButtonState(){if(this._hasInvalidInput())return this._submitButton.classList.add(this._inactiveButtonClass),void(this._submitButton.disabled=!0);this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_hasInvalidInput(){return!this._inputElements.every((e=>e.validity.valid))}_setEventListeners(){this._inputElements=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputElements.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}resetValidation(){this._form.reset(),this.disableButton()}};document.querySelector(".profile__edit-button").addEventListener("click",(()=>{const e=m.getUserInfo();o.resetValidation(),h.open(),h.setInputValues(e)})),document.querySelector(".profile__add-button").addEventListener("click",(()=>{n.resetValidation(),d.open()})),document.querySelector(".profile__image").addEventListener("click",(()=>{_.open()}));const o=new r(i,document.querySelector("#edit-form"));o.enableValidation();const n=new r(i,document.querySelector("#add-modal").querySelector("#add-form"));n.enableValidation();const l=t=>{const s=new e({data:t,handleImageClick:e=>{c.open(e)},handleDeleteClick:e=>{u.open(e)}},"#card-template").getView();a.addItem(s)},a=new class{constructor(e,t){let{items:s,renderer:i}=e;this._renderer=i,this._items=s,this._galleryCards=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._galleryCards.prepend(e)}}({items:[{name:"Tokyo",link:"https://images.unsplash.com/photo-1678951310861-60299f9b0162?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=687&q=80"},{name:"Golden Gate Bridge",link:"https://images.unsplash.com/photo-1603389865219-669a0768193e?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=687&q=80"},{name:"Pleasure Pier TX",link:"https://images.unsplash.com/photo-1598805291186-612c3ca482a6?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8OHx8cGxlYXN1cmUlMjBwaWVyfGVufDB8fDB8fA%3D%3D&auto=format&fit=crop&w=400&q=60"},{name:"Oceanside CA",link:"https://images.unsplash.com/photo-1528521712081-0480efff6665?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=687&q=80"},{name:"Yellowstone National Park",link:"https://images.unsplash.com/photo-1586968332704-0160550f3ec1?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTV8fHllbGxvd3N0b25lJTIwbmF0aW9uYWwlMjBwYXJrfGVufDB8fDB8fA%3D%3D&auto=format&fit=crop&w=400&q=60"},{name:"Venice",link:"https://images.unsplash.com/photo-1516483638261-f4dbaf036963?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8aXRhbHl8ZW58MHx8MHx8&auto=format&fit=crop&w=400&q=60"}],renderer:l},".gallery__cards");a.renderItems();const c=new class extends t{constructor(e){let{popupSelector:t}=e;super({popupSelector:t}),this._modalPicture=this._popupElement.querySelector(".modal__picture"),this._modalPictureDescription=this._popupElement.querySelector(".modal__picture-description")}open(e){this._modalPicture.src=e.link,this._modalPicture.alt=`Photo of ${e.name}`,this._modalPictureDescription.textContent=e.name,super.open()}}({popupSelector:"#picture-modal"}),d=new s({popupSelector:"#add-modal",handleFormSubmit:e=>{l(e),d.close()}}),h=new s({popupSelector:"#edit-modal",handleFormSubmit:e=>{m.setUserInfo(e),h.close()}}),u=new class extends t{constructor(e){let{popupSelector:t,handleFormSubmit:s}=e;super({popupSelector:t}),this._handleFormSubmit=s,this._confirmDeleteButton=this._popupElement.querySelector("#confirm-button"),this._setHandlers()}_setHandlers(){this._confirmDelete=this._popupElement.querySelector("#confirm-button"),this._confirmDelete.addEventListener("click",this._handleConfirm.bind(this)),this._confirmDeleteButton.addEventListener("click",this._handleConfirm.bind(this))}_handleConfirm(e){e.preventDefault(),"function"==typeof this._confirmHandler&&this._confirmHandler()}open(e){super.open(),this._handleFormSubmit(e)}setConfirmHandler(e){this._confirmHandler=e}setSubmitAction(e){this._handleFormSubmit=e}}({popupSelector:"#confirm-modal",handleFormSubmit:()=>{id===ownerId&&p.delete(id).then((()=>{u.close()})).catch((e=>{console.error(e)}))}}),_=new s({popupSelector:"#avatar-modal",handleFormSubmit:e=>{_.close(e)}}),m=new class{constructor(e,t,s){this.userName=document.querySelector(e),this.userJob=document.querySelector(t),this._avatarSelector=document.querySelector(s)}getUserInfo(){return{userName:this.userName.textContent,userJob:this.userJob.textContent}}setUserInfo(e){let{userJob:t,userName:s}=e;this.userName.textContent=s,this.userJob.textContent=t}setAvatar(e){this._avatarSelector.src=e,console.log(e)}}(".profile__title",".profile__description"),p=new class{constructor(e){let{baseURL:t,headers:s}=e;this._baseURL=t,this._headers=s}getInitialCards(){return fetch(`${this._baseURL}/cards`,{headers:this._headers}).then((e=>this._checkServerResponse(e)))}getUserInfo(){return fetch(`${this._baseURL}/users/me`,{headers:this._headers}).then((e=>this._checkServerResponse(e)))}changeUserInfo(e,t){return fetch(`${this._baseURL}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then((e=>this._checkServerResponse(e)))}setAvatar(e){return fetch(`${this._baseURL}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.url})}).then((e=>this._checkServerResponse(e)))}addCard(e,t){return fetch(`${this._baseURL}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})}).then((e=>this._checkServerResponse(e)))}deleteCard(e){return fetch(`${this._baseURL}/cards/${e}`,{method:"DELETE",headers:this._headers}).then((e=>this._checkServerResponse(e)))}changeLikeCard(e,t){return fetch(`${this._baseURL}/cards/likes/${e}`,{method:t?"DELETE":"PUT",headers:this._headers}).then((e=>this._checkServerResponse(e)))}_checkServerResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}}({baseUrl:"https://around.nomoreparties.co/v1/cohort-3-en",headers:{authorization:"36d4ccce-10c3-4fd1-8e69-65692c768133","Content-Type":"application/json"}})}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,