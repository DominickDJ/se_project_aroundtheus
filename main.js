!function(){"use strict";class e{constructor(e,t){let{data:s,handleImageClick:i}=e;this._name=s.name,this._link=s.link,this._cardSelector=t,this._handleImageClick=i}_setEventListeners(){this._cardElement.querySelector(".card__like-button").addEventListener("click",(()=>{this._handleLikeIcon()})),this._cardElement.querySelector(".card__delete-button").addEventListener("click",(()=>{this._handleDeleteButton()})),this._cardElement.querySelector(".card__image").addEventListener("click",(()=>{this._handleImageClick({link:this._link,text:this._text})}))}_handleLikeIcon(){this._cardElement.querySelector(".card__like-button").classList.toggle("card__like-button_clicked")}_handleDeleteButton(){this._cardElement.remove(),this._cardElement=null}_handleImageClick(){modalPicture.src=this._link,modalPicture.alt=`Photo of ${this._name}`,modalPictureDescription.textContent=this._name,open(pictureModal)}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getView(){return this._cardElement=this._getTemplate(),this._setEventListeners(),this._cardElement.querySelector(".card__image").src=this._link,this._cardElement.querySelector(".card__image").alt=this._name,this._cardElement.querySelector(".card__title").textContent=this._name,this._cardElement}}class t{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._closeButton=this._popupElement.querySelector(".modal__close-button")}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscapeClose),this._closeButton.addEventListener("click",this._handleClickClose),this._popupElement.addEventListener("mousedown",this._handleClickClose)}close(){document.removeEventListener("keydown",this._handleEscapeClose),this._popupElement.removeEventListener("mousedown",this._handleClickClose),this._popupElement.classList.remove("modal_opened"),this._closeButton.removeEventListener("click",this._handleClickClose)}_handleClickClose=e=>{(e.target.classList.contains("modal_opened")||e.target.classList.contains("modal__close-button"))&&this.close()};_handleEscapeClose=e=>{"Escape"===e.key&&this.close()}}class s extends t{constructor(e){let{popupSelector:t,handleFormSubmit:s}=e;super({popupSelector:t}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._inputList=this._popupElement.querySelectorAll(".modal__input"),this._handleFormSubmit=s,this._handleSubmit=this._handleSubmit.bind(this)}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setInputValues(e){this._inputList.forEach((t=>{t.value=e[t.name]}))}_handleSubmit(){this._handleFormSubmit(this._getInputValues())}open(){this._popupForm.addEventListener("submit",this._handleSubmit),super.open()}close(){this._popupForm.removeEventListener("submit",this._handleSubmit),this._popupForm.reset(),super.close()}}const i={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"};var o=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_showInputError(e){const t=this._form.querySelector("#"+e.id+"-error");e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector("#"+e.id+"-error");e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}toggleButtonState(){if(this._hasInvalidInput())return this._submitButton.classList.add(this._inactiveButtonClass),void(this._submitButton.disabled=!0);this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_hasInvalidInput(){return!this._inputElements.every((e=>e.validity.valid))}_setEventListeners(){this._inputElements=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputElements.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}resetValidation(){this._form.reset(),this.disableButton()}};document.querySelector(".profile__edit-button").addEventListener("click",(()=>{const e=_.getUserInfo();r.resetValidation(),d.open(),d.setInputValues(e)})),document.querySelector(".profile__add-button").addEventListener("click",(()=>{n.resetValidation(),u.open()}));const r=new o(i,document.querySelector("#edit-form"));r.enableValidation();const n=new o(i,document.querySelector("#add-modal").querySelector("#add-form"));n.enableValidation();const l=t=>{const s=new e({data:t,handleImageClick:e=>{c.open(e)}},"#card-template").getView();a.addItem(s)},a=new class{constructor(e,t){let{items:s,renderer:i}=e;this._renderer=i,this._items=s,this._galleryCards=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._galleryCards.prepend(e)}}({items:[{name:"Tokyo",link:"https://images.unsplash.com/photo-1678951310861-60299f9b0162?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=687&q=80"},{name:"Golden Gate Bridge",link:"https://images.unsplash.com/photo-1603389865219-669a0768193e?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=687&q=80"},{name:"Pleasure Pier TX",link:"https://images.unsplash.com/photo-1598805291186-612c3ca482a6?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8OHx8cGxlYXN1cmUlMjBwaWVyfGVufDB8fDB8fA%3D%3D&auto=format&fit=crop&w=400&q=60"},{name:"Oceanside CA",link:"https://images.unsplash.com/photo-1528521712081-0480efff6665?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=687&q=80"},{name:"Yellowstone National Park",link:"https://images.unsplash.com/photo-1586968332704-0160550f3ec1?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTV8fHllbGxvd3N0b25lJTIwbmF0aW9uYWwlMjBwYXJrfGVufDB8fDB8fA%3D%3D&auto=format&fit=crop&w=400&q=60"},{name:"Venice",link:"https://images.unsplash.com/photo-1516483638261-f4dbaf036963?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8aXRhbHl8ZW58MHx8MHx8&auto=format&fit=crop&w=400&q=60"}],renderer:l},".gallery__cards");a.renderItems();const c=new class extends t{constructor(e){let{popupSelector:t}=e;super({popupSelector:t}),this._modalPicture=this._popupElement.querySelector(".modal__picture"),this._modalPictureDescription=this._popupElement.querySelector(".modal__picture-description")}open(e){this._modalPicture.src=e.link,this._modalPicture.alt=`Photo of ${e.name}`,this._modalPictureDescription.textContent=e.name,super.open()}}({popupSelector:"#picture-modal"}),u=new s({popupSelector:"#add-modal",handleFormSubmit:e=>{l(e),u.close()}}),d=new s({popupSelector:"#edit-modal",handleFormSubmit:e=>{_.setUserInfo(e),d.close()}}),h=new s({popupSelector:"#confirm-modal",handleFormSubmit:()=>{h.close()}}),m=new s({popupSelector:"#avatar-modal",handleFormSubmit:e=>{m.close(e)}}),_=new class{constructor(e,t){this.userName=document.querySelector(e),this.userJob=document.querySelector(t)}getUserInfo(){return{userName:this.userName.textContent,userJob:this.userJob.textContent}}setUserInfo(e){let{userJob:t,userName:s}=e;this.userName.textContent=s,this.userJob.textContent=t}}(".profile__title",".profile__description")}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,