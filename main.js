!function(){"use strict";class t{constructor(t,e){let{data:s,handleImageClick:i}=t;this._name=s.name,this._link=s.link,this._cardSelector=e,this._handleImageClick=i}_setEventListeners(){this._cardElement.querySelector(".card__like-button").addEventListener("click",(()=>{this._handleLikeIcon()})),this._cardElement.querySelector(".card__delete-button").addEventListener("click",(()=>{this._handleDeleteButton()})),this._cardElement.querySelector(".card__image").addEventListener("click",(()=>{this._handleImageClick({link:this._link,text:this._text})}))}_handleLikeIcon(){this._cardElement.querySelector(".card__like-button").classList.toggle("card__like-button_clicked")}_handleDeleteButton(){this._cardElement.remove(),this._cardElement=null}_handleImageClick(){modalPicture.src=this._link,modalPicture.alt=`Photo of ${this._name}`,modalPictureDescription.textContent=this._name,open(pictureModal)}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getView(){return this._cardElement=this._getTemplate(),this._setEventListeners(),this._cardElement.querySelector(".card__image").src=this._link,this._cardElement.querySelector(".card__image").alt=this._name,this._cardElement.querySelector(".card__title").textContent=this._name,this._cardElement}}class e{constructor(t){let{popupSelector:e}=t;this._popupElement=document.querySelector(e),this._closeButton=this._popupElement.querySelector(".modal__close-button")}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscapeClose),this._closeButton.addEventListener("click",this._handleClickClose),this._popupElement.addEventListener("mousedown",this._handleClickClose)}close(){document.removeEventListener("keydown",this._handleEscapeClose),this._popupElement.removeEventListener("mousedown",this._handleClickClose),this._popupElement.classList.remove("modal_opened"),this._closeButton.removeEventListener("click",this._handleClickClose)}_handleClickClose=t=>{(t.target.classList.contains("modal_opened")||t.target.classList.contains("modal__close-button"))&&this.close()};_handleEscapeClose=t=>{"Escape"===t.key&&this.close()}}class s extends e{constructor(t){let{popupSelector:e,handleFormSubmit:s}=t;super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._inputList=this._popupElement.querySelectorAll(".modal__input"),this._handleFormSubmit=s,this._handleSubmit=this._handleSubmit.bind(this)}_getInputValues(){const t={};return this._inputList.forEach((e=>{t[e.name]=e.value})),t}setInputValues(t){this._inputList.forEach((e=>{e.value=t[e.name]}))}_handleSubmit(){this._handleFormSubmit(this._getInputValues())}open(){this._popupForm.addEventListener("submit",this._handleSubmit),super.open()}close(){this._popupForm.removeEventListener("submit",this._handleSubmit),this._popupForm.reset(),super.close()}}const i={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"};var o=class{constructor(t,e){this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._form=e}_checkInputValidity(t){if(!t.validity.valid)return this._showInputError(t);this._hideInputError(t)}_showInputError(t){const e=this._form.querySelector("#"+t.id+"-error");t.classList.add(this._inputErrorClass),e.textContent=t.validationMessage,e.classList.add(this._errorClass)}_hideInputError(t){const e=this._form.querySelector("#"+t.id+"-error");t.classList.remove(this._inputErrorClass),e.textContent="",e.classList.remove(this._errorClass)}toggleButtonState(){if(this._hasInvalidInput())return this._submitButton.classList.add(this._inactiveButtonClass),void(this._submitButton.disabled=!0);this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_hasInvalidInput(){return!this._inputElements.every((t=>t.validity.valid))}_setEventListeners(){this._inputElements=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputElements.forEach((t=>{t.addEventListener("input",(e=>{this._checkInputValidity(t),this.toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(t=>{t.preventDefault()})),this._setEventListeners()}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}resetValidation(){this._form.reset(),this.disableButton()}};document.querySelector(".profile__edit-button").addEventListener("click",(()=>{const t=m.getUserInfo();r.resetValidation(),d.open(),d.setInputValues(t)})),document.querySelector(".profile__add-button").addEventListener("click",(()=>{n.resetValidation(),u.open()}));const r=new o(i,document.querySelector("#edit-form"));r.enableValidation();const n=new o(i,document.querySelector("#add-modal").querySelector("#add-form"));n.enableValidation();const l=e=>{const s=new t({data:e,handleImageClick:t=>{c.open(t)}},"#card-template").getView();a.addItem(s)},a=new class{constructor(t,e){let{items:s,renderer:i}=t;this._renderer=i,this._items=s,this._galleryCards=document.querySelector(e)}renderItems(){this._items.forEach((t=>{this._renderer(t)}))}addItem(t){this._galleryCards.prepend(t)}}({items:[{name:"Tokyo",link:"https://images.unsplash.com/photo-1678951310861-60299f9b0162?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=687&q=80"},{name:"Golden Gate Bridge",link:"https://images.unsplash.com/photo-1603389865219-669a0768193e?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=687&q=80"},{name:"Pleasure Pier TX",link:"https://images.unsplash.com/photo-1598805291186-612c3ca482a6?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8OHx8cGxlYXN1cmUlMjBwaWVyfGVufDB8fDB8fA%3D%3D&auto=format&fit=crop&w=400&q=60"},{name:"Oceanside CA",link:"https://images.unsplash.com/photo-1528521712081-0480efff6665?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=687&q=80"},{name:"Yellowstone National Park",link:"https://images.unsplash.com/photo-1586968332704-0160550f3ec1?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTV8fHllbGxvd3N0b25lJTIwbmF0aW9uYWwlMjBwYXJrfGVufDB8fDB8fA%3D%3D&auto=format&fit=crop&w=400&q=60"},{name:"Venice",link:"https://images.unsplash.com/photo-1516483638261-f4dbaf036963?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8aXRhbHl8ZW58MHx8MHx8&auto=format&fit=crop&w=400&q=60"}],renderer:l},".gallery__cards");a.renderItems();const c=new class extends e{constructor(t){let{popupSelector:e}=t;super({popupSelector:e}),this._modalPicture=this._popupElement.querySelector(".modal__picture"),this._modalPictureDescription=this._popupElement.querySelector(".modal__picture-description")}open(t){this._modalPicture.src=t.link,this._modalPicture.alt=`Photo of ${t.name}`,this._modalPictureDescription.textContent=t.name,super.open()}}({popupSelector:"#picture-modal"}),u=new s({popupSelector:"#add-modal",handleFormSubmit:t=>{l(t),u.close()}}),d=new s({popupSelector:"#edit-modal",handleFormSubmit:t=>{m.setUserInfo(t),d.close()}}),h=new s({popupSelector:"#confirm-modal",handleFormSubmit:()=>{h.close()}}),m=new class{constructor(t,e){this.userName=document.querySelector(t),this.userJob=document.querySelector(e)}getUserInfo(){return{userName:this.userName.textContent,userJob:this.userJob.textContent}}setUserInfo(t){let{userJob:e,userName:s}=t;this.userName.textContent=s,this.userJob.textContent=e}}(".profile__title",".profile__description")}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,